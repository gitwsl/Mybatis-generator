<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.wsl.dao.ScoreMapper">
  <resultMap id="BaseResultMap" type="com.demo.wsl.model.Score">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from score
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.demo.wsl.model.Score">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into score (score, updated_time, created_time, 
      is_deleted, user_id)
    values (#{score,jdbcType=DOUBLE}, #{updatedTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.demo.wsl.model.Score">
    update score
    set score = #{score,jdbcType=DOUBLE},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, score, updated_time, created_time, is_deleted, user_id
    from score
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, score, updated_time, created_time, is_deleted, user_id
    from score
  </select>
  <resultMap id="BaseResultMap" type="com.demo.wsl.model.Score">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from score
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.demo.wsl.model.Score">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into score (score, updated_time, created_time, 
      is_deleted)
    values (#{score,jdbcType=DOUBLE}, #{updatedTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.demo.wsl.model.Score">
    update score
    set score = #{score,jdbcType=DOUBLE},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, score, updated_time, created_time, is_deleted
    from score
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, score, updated_time, created_time, is_deleted
    from score
  </select>
  <resultMap id="BaseResultMap" type="com.demo.wsl.model.Score">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from score
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.demo.wsl.model.Score">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into score (score, updated_time, created_time, 
      is_deleted, user_id)
    values (#{score,jdbcType=DOUBLE}, #{updatedTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.demo.wsl.model.Score">
    update score
    set score = #{score,jdbcType=DOUBLE},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, score, updated_time, created_time, is_deleted, user_id
    from score
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, score, updated_time, created_time, is_deleted, user_id
    from score
  </select>
  <resultMap id="BaseResultMap" type="com.demo.wsl.model.Score">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from score
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.demo.wsl.model.Score">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into score (score, updated_time, created_time, 
      is_deleted)
    values (#{score,jdbcType=DOUBLE}, #{updatedTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.demo.wsl.model.Score">
    update score
    set score = #{score,jdbcType=DOUBLE},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, score, updated_time, created_time, is_deleted
    from score
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, score, updated_time, created_time, is_deleted
    from score
  </select>
</mapper>